// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace QFramework.TodoList
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using UnityEngine;
    using UnityEngine.UI;
    using QFramework;

    //=============================     消息/事件    =========================================

    public enum PanelTodoListEvent
    {
        Start = QMgrID.UI,
        OnTodoItemSelect,
        OnTodoItemAdd,
        OnTodoItemUpdate,
        End,
    }

    public class OnTodoItemSelectMsg : QMsg
    {
        public TodoItem ItemData;

        public OnTodoItemSelectMsg(TodoItem itemData) : base((int)PanelTodoListEvent.OnTodoItemSelect)
        {
            ItemData = itemData;
        }
    }

    public class OnTodoItemAddMsg : QMsg
    {
        public TodoItem ItemData;

        public OnTodoItemAddMsg(TodoItem itemData) : base((int)PanelTodoListEvent.OnTodoItemAdd)
        {
            ItemData = itemData;
        }
    }

    public class OnTodoItemUpdateMsg : QMsg
    {
        public TodoItem ItemData;

        public OnTodoItemUpdateMsg(TodoItem itemData) : base((int)PanelTodoListEvent.OnTodoItemUpdate)
        {
            ItemData = itemData;
        }
    }

    //========================================================================================


    public class PanelTodoListData : QFramework.UIPanelData
    {
        // 测试用例
        public TodoList Model = new TodoList()
        {
            mTodoItems = new List<TodoItem>()
            {
                new TodoItem() { Completed = false, Content = "need to study" },
                new TodoItem() { Completed = false, Content = "need to have lunch" },
            }
        };
    }


    public partial class PanelTodoList : QFramework.UIPanel
    {
        
        void OnTodoItemAdd(TodoItem itemData)
        {
            Container.AddTodoItem(UITodoItem, itemData);
        }

        void OnTodoItemSelect(TodoItem itemData)
        {
            PanelAddItem.ModifyState(itemData);
        }

        void OnTodoItemUpdate(TodoItem itemData)
        {
            Container.UpdateTodoItem(itemData);
        }

        // ==========================================================================

        protected override void RegisterUIEvent()
        {
            base.RegisterUIEvent();
            
            // 查看completed list事件
            BtnCheckCompleted.onClick.AddListener(() =>
            {
                CloseSelf();
                UIMgr.OpenPanel<PanelCompletedList>(new PanelCompletedListData()
                {
                    Model = mData.Model,
                });
            });
            
        }

        protected override void ProcessMsg(int eventId, QFramework.QMsg msg)
        {
            if (eventId == (int)PanelTodoListEvent.OnTodoItemSelect)
            {
                // 修改todo事件
                var selectMsg = msg as OnTodoItemSelectMsg;
                OnTodoItemSelect(selectMsg.ItemData);
            }
            else if (eventId == (int)PanelTodoListEvent.OnTodoItemUpdate)
            {
                // 更新todo事件
                var UpdateMsg = msg as OnTodoItemUpdateMsg;
                OnTodoItemUpdate(UpdateMsg.ItemData);
            }
            else if (eventId == (int)PanelTodoListEvent.OnTodoItemAdd)
            {
                // 添加todo事件
                var addMsg = msg as OnTodoItemAddMsg;
                mData.Model.mTodoItems.Add(addMsg.ItemData);  // Model 层更新
                OnTodoItemAdd(addMsg.ItemData);   // view 层更新
            }
        }
        
        protected override void OnInit(QFramework.IUIData uiData)
        {
            mData = uiData as PanelTodoListData ?? new PanelTodoListData();
            // please add init code here
            Container.GenerateTodoItem(mData.Model, UITodoItem);
            PanelAddItem.Init(mData.Model);
            RegisterEvent(PanelTodoListEvent.OnTodoItemSelect);
            RegisterEvent(PanelTodoListEvent.OnTodoItemAdd);
            RegisterEvent(PanelTodoListEvent.OnTodoItemUpdate);
        }
        
        protected override void OnOpen(QFramework.IUIData uiData)
        {
        }
        
        protected override void OnShow()
        {
        }
        
        protected override void OnHide()
        {
        }
        
        protected override void OnClose()
        {
        }
    }

}
